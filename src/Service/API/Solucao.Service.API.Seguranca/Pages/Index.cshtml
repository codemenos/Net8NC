@page
@model Solucao.Service.API.Seguranca.Pages.IndexModel

@using Solucao.Domain.Seguranca.Aggregates
@using Microsoft.AspNetCore.Identity

@inject SignInManager<SecurityUser> SignInManager
@inject UserManager<SecurityUser> UserManager

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    
}

<h1>Segurança</h1>
<p>Você está no modulo de segurança.</p>


<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Consent"
               title="Manage">Olá @User.Identity.Name!</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Logout" asp-route-returnUrl="@Url.Page("/", new { area = "" })" method="post">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Authenticate">Login</a>
        </li>
    }
</ul>